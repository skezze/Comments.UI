// src/app/comment-form/comment-form.component.ts
import { Component } from '@angular/core';
import { FormBuilder, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { HttpClient, HttpClientModule } from '@angular/common/http';
import { UserComment } from '../../models/user-comment';
import { RecaptchaModule } from 'ng-recaptcha';
import { BrowserModule } from '@angular/platform-browser';
import { CommentService } from '../../services/comment.service';
import { NgIf } from '@angular/common';

@Component({
  selector: 'app-comment-form',
  templateUrl: './comment-form.component.html',
  styleUrls: ['./comment-form.component.css'],
  standalone: true,
  imports:[RecaptchaModule,
    NgIf,
    ReactiveFormsModule,
    HttpClientModule,
    RecaptchaModule]
})
export class CommentFormComponent {
  commentForm: FormGroup;
  captchaSuccess: boolean = false;
  siteKey = '6LezIGMqAAAAANuY9mqPsj4ALZrLiWVsEatuibug';

  constructor(
    private fb: FormBuilder,
    private http: HttpClient,
    private cs: CommentService
  ) {
    this.commentForm = this.fb.group({
      email: ['', [Validators.required, Validators.email]],
      userName: ['', [Validators.required]],
      text: ['', [Validators.required]],
    });
  }

  onSubmit() {
    if (this.commentForm.valid && this.captchaSuccess) {
      const comment: UserComment = {
        id: 0, // This will be generated by the backend
        text: this.commentForm.value.text,
        userid:0,
        user: {
          id: 0,
          email: this.commentForm.value.email,
          userName: this.commentForm.value.userName,
        },
        dateAdded: new Date(),
      };

      this.cs.addComment(comment).subscribe({
        next: (response) => {
          console.log('Comment submitted:', response);
          this.commentForm.reset();
          this.captchaSuccess = false; // Reset captcha status
        },
        error: (err) => {
          console.error('Error submitting comment:', err);
        },
      });
    }
  }

  onCaptchaSuccess() {
    this.captchaSuccess = true;
  }
}